var fs = require("fs");

exports.getInput = function() {
	var component = null;
	process.argv.forEach(function(val, index, array) {
		if(index == 2) {
			component = JSON.parse(val);
		}
	});

	if(!component || !component.output_html || !component.output_js) {
		console.log("Invalid arguments received from generator:");
		console.log(component);
		process.exit(1);
	}

	return component;
};

exports.setOutput = function(component) {
	if(typeof(component) != "object") {
		return false;		
	}

	if(!component.html) {
		component.html = "";
	}

	if(!component.js) {
		component.js = "";
	}

	if(typeof(component.js) == "function") {
		var s = component.js.toString();
		var start = s.indexOf("{");
		s = s.slice(start + 1);
		var end = s.lastIndexOf("}");
		component.js = s.slice(0, end);
	}

	fs.writeFile(component.output_html, component.html, function(err) {
		if(err) {
			console.log(err);
			process.exit(1);
		}
	});

	fs.writeFile(component.output_js, component.js, function(err) {
		if(err) {
			console.log(err);
			process.exit(1);
		}
	});
};


var escapeRegExp = function (string) {
	return string.replace(/([.*+?^=!:${}()|\[\]\/\\])/g, "\\$1");
}
exports.escapeRegExp = escapeRegExp;


var replaceAll = function(string, find, replace) {
	return string.replace(new RegExp(escapeRegExp(find), 'g'), replace);
}
exports.replaceAll = replaceAll;

var getRouteParamsStr = function(routeParamsArray) {
	var routeParamsStr = "";
	if(routeParamsArray && routeParamsArray.length) {
		for(var i = 0; i < routeParamsArray.length; i++) {
			routeParam = routeParamsArray[i];
			var paramName = routeParam.name || "";
			var paramValue = routeParam.value || "";
			if(routeParam.value === null) paramValue = "null";

			if(i > 0) {
				routeParamsStr = routeParamsStr + ", ";
			}
			routeParamsStr = routeParamsStr + paramName + ": " + paramValue;
		}
	}
	return routeParamsStr;
}

exports.getRouteParamsStr = getRouteParamsStr;
