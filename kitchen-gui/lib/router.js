Router.map(function () {
	// ---
	// client
	// ---
	this.route("discover", {path: "/discover", controller: "DiscoverController", where: "client"});
	this.route("app_details", {path: "/app_details/:applicationId", controller: "AppDetailsController", where: "client"});
	this.route("app_details.about", {path: "/app_details/about/:applicationId", controller: "AppDetailsAboutController", where: "client"});
	this.route("app_details.stargazers", {path: "/app_details/stargazers/:applicationId", controller: "AppDetailsStargazersController", where: "client"});
	this.route("app_details.forks", {path: "/app_details/forks/:applicationId", controller: "AppDetailsForksController", where: "client"});
	this.route("developers", {path: "/developers", controller: "DevelopersController", where: "client"});
	this.route("hireme", {path: "/hireme", controller: "HiremeController", where: "client"});
	this.route("dev_details", {path: "/dev_details/:userId", controller: "DevDetailsController", where: "client"});
	this.route("dev_details.profile", {path: "/dev_details/profile/:userId", controller: "DevDetailsProfileController", where: "client"});
	this.route("dev_details.projects", {path: "/dev_details/projects/:userId", controller: "DevDetailsProjectsController", where: "client"});
	this.route("jobs", {path: "/jobs", controller: "JobsController", where: "client"});
	this.route("jobs.insert", {path: "/jobs/insert", controller: "JobsInsertController", where: "client"});
	this.route("jobs.edit", {path: "/jobs/edit/:jobId", controller: "JobsEditController", where: "client"});
	this.route("jobs.details", {path: "/jobs/details/:jobId", controller: "JobsDetailsController", where: "client"});
	this.route("news", {path: "/news", controller: "NewsController", where: "client"});
	this.route("docs", {path: "/docs", controller: "DocsController", where: "client"});
	this.route("docs.gui", {path: "/docs/gui", controller: "DocsGuiController", where: "client"});
	this.route("docs.gui.about", {path: "/docs/gui/about", controller: "DocsGuiAboutController", where: "client"});
	this.route("docs.gui.videos", {path: "/docs/gui/videos", controller: "DocsGuiVideosController", where: "client"});
	this.route("docs.cli", {path: "/docs/cli", controller: "DocsCliController", where: "client"});
	this.route("docs.cli.about", {path: "/docs/cli/about", controller: "DocsCliAboutController", where: "client"});
	this.route("docs.cli.getting_started", {path: "/docs/cli/getting_started", controller: "DocsCliGettingStartedController", where: "client"});
	this.route("docs.cli.api_reference", {path: "/docs/cli/api_reference", controller: "DocsCliApiReferenceController", where: "client"});
	this.route("docs.cli.videos", {path: "/docs/cli/videos", controller: "DocsCliVideosController", where: "client"});
	this.route("docs.cli.examples", {path: "/docs/cli/examples", controller: "DocsCliExamplesController", where: "client"});
	this.route("contribute", {path: "/contribute", controller: "ContributeController", where: "client"});
	this.route("donate", {path: "/donate", controller: "ContributeController", where: "client"});
	this.route("about", {path: "/about", controller: "AboutController", where: "client"});
	this.route("terms", {path: "/terms", controller: "TermsController", where: "client"});
	this.route("privacy", {path: "/privacy", controller: "PrivacyController", where: "client"});
	this.route("home_public", {path: "/", controller: "HomePublicController", where: "client"});
	this.route("login", {path: "/login", controller: "LoginController", where: "client"});
	this.route("register", {path: "/register", controller: "RegisterController", where: "client"});
	this.route("verify_email", {path: "/verify_email/:verifyEmailToken", controller: "VerifyEmailController", where: "client"});
	this.route("forgot_password", {path: "/forgot_password", controller: "ForgotPasswordController", where: "client"});
	this.route("reset_password", {path: "/reset_password/:resetPasswordToken", controller: "ResetPasswordController", where: "client"});
	this.route("home", {path: "/home", controller: "HomePrivateController", where: "client"});
	this.route("home.insert", {path: "/home/insert/:forkedAppId?", controller: "HomePrivateInsertController", where: "client"});
	this.route("home.init", {path: "/home/init", controller: "HomePrivateInitController", where: "client"});
	this.route("home.settings", {path: "/home/settings/:applicationId", controller: "HomePrivateSettingsController", where: "client"});
	this.route("home.settings.general", {path: "/home/settings/:applicationId/general", controller: "HomePrivateSettingsGeneralController", where: "client"});
	this.route("home.settings.webhooks", {path: "/home/settings/:applicationId/webhooks", controller: "HomePrivateSettingsWebhooksController", where: "client"});
	this.route("home.settings.danger", {path: "/home/settings/:applicationId/danger", controller: "HomePrivateSettingsDangerController", where: "client"});
	this.route("home.edit", {path: "/home/edit/:applicationId", controller: "HomePrivateEditController", where: "client"});
	this.route("home.edit.pages", {path: "/home/edit/:applicationId/pages", controller: "HomePrivateEditPagesController", where: "client"});
	this.route("home.edit.database", {path: "/home/edit/:applicationId/database", controller: "HomePrivateEditDatabaseController", where: "client"});
	this.route("home.edit.files", {path: "/home/edit/:applicationId/files", controller: "HomePrivateEditFilesController", where: "client"});
	this.route("home.edit.server_config", {path: "/home/edit/:applicationId/server_config", controller: "HomePrivateEditServerConfigController", where: "client"});
	this.route("home.edit.server_config.startup", {path: "/home/edit/:applicationId/server_config/startup", controller: "HomePrivateEditServerConfigStartupController", where: "client"});
	this.route("home.edit.server_config.routes", {path: "/home/edit/:applicationId/server_config/routes", controller: "HomePrivateEditServerConfigRoutesController", where: "client"});
	this.route("home.edit.server_config.methods", {path: "/home/edit/:applicationId/server_config/methods", controller: "HomePrivateEditServerConfigMethodsController", where: "client"});
	this.route("home.edit.client_config", {path: "/home/edit/:applicationId/client_config", controller: "HomePrivateEditClientConfigController", where: "client"});
	this.route("home.edit.client_config.startup", {path: "/home/edit/:applicationId/client_config/startup", controller: "HomePrivateEditClientConfigStartupController", where: "client"});
	this.route("home.edit.client_config.styles", {path: "/home/edit/:applicationId/client_config/styles", controller: "HomePrivateEditClientConfigStylesController", where: "client"});
	this.route("home.edit.client_config.frontend", {path: "/home/edit/:applicationId/client_config/frontend", controller: "HomePrivateEditClientConfigFrontendController", where: "client"});
	this.route("home.edit.global_config", {path: "/home/edit/:applicationId/global_config", controller: "HomePrivateEditGlobalConfigController", where: "client"});
	this.route("home.edit.global_config.packages", {path: "/home/edit/:applicationId/global_config/packages", controller: "HomePrivateEditGlobalConfigPackagesController", where: "client"});
	this.route("home.edit.global_config.accounts", {path: "/home/edit/:applicationId/global_config/accounts", controller: "HomePrivateEditGlobalConfigAccountsController", where: "client"});
	this.route("home.edit.global_config.wizards", {path: "/home/edit/:applicationId/global_config/wizards", controller: "HomePrivateEditGlobalConfigWizardsController", where: "client"});
	this.route("home.edit.source", {path: "/home/edit/:applicationId/source", controller: "HomePrivateEditSourceController", where: "client"});
	this.route("home.edit.build", {path: "/home/edit/:applicationId/build", controller: "HomePrivateEditBuildController", where: "client"});
	this.route("home.edit.build.console", {path: "/home/edit/:applicationId/build/console", controller: "HomePrivateEditBuildConsoleController", where: "client"});
	this.route("home.edit.build.options", {path: "/home/edit/:applicationId/build/options", controller: "HomePrivateEditBuildOptionsController", where: "client"});
	this.route("home.edit.deploy", {path: "/home/edit/:applicationId/deploy", controller: "HomePrivateEditDeployController", where: "client"});
	this.route("admin", {path: "/admin", controller: "AdminController", where: "client"});
	this.route("admin.user_stats", {path: "/admin/user_stats", controller: "AdminUserStatsController", where: "client"});
	this.route("admin.users", {path: "/admin/users", controller: "AdminUsersController", where: "client"});
	this.route("admin.users.details", {path: "/admin/users/details/:userId", controller: "AdminUsersDetailsController", where: "client"});
	this.route("admin.users.edit", {path: "/admin/users/edit/:userId", controller: "AdminUsersEditController", where: "client"});
	this.route("admin.newsletters", {path: "/admin/newsletters", controller: "AdminNewslettersController", where: "client"});
	this.route("admin.newsletters.insert", {path: "/admin/newsletters/insert", controller: "AdminNewslettersInsertController", where: "client"});
	this.route("admin.newsletters.details", {path: "/admin/newsletters/details/:newsletterId", controller: "AdminNewslettersDetailsController", where: "client"});
	this.route("admin.newsletters.edit", {path: "/admin/newsletters/edit/:newsletterId", controller: "AdminNewslettersEditController", where: "client"});
	this.route("admin.maintenance", {path: "/admin/maintenance", controller: "AdminMaintenanceController", where: "client"});
	this.route("messenger", {path: "/messenger/:contactId?", controller: "MessengerController", where: "client"});
	this.route("user_settings", {path: "/user_settings", controller: "UserSettingsController", where: "client"});
	this.route("user_settings.profile", {path: "/user_settings/profile", controller: "UserSettingsProfileController", where: "client"});
	this.route("user_settings.change_pass", {path: "/user_settings/change_pass", controller: "UserSettingsChangePassController", where: "client"});
	this.route("user_settings.notifications", {path: "/user_settings/notifications", controller: "UserSettingsNotificationsController", where: "client"});
	this.route("user_settings.danger", {path: "/user_settings/danger", controller: "UserSettingsDangerController", where: "client"});
	this.route("logout", {path: "/logout", controller: "LogoutController", where: "client"});

	// server-side routes
	this.route("install", {path: "/install", controller: "InstallController", where: "server"});
	this.route("api.getapp.json", {path: "/api/getapp/json/:applicationId", controller: "ApiGetappJsonController", where: "server"});
	this.route("api.waitapp.json", {path: "/api/waitapp/json/:applicationId", controller: "ApiWaitappJsonController", where: "server"});
	this.route("mailgun.unsubscribe", {path: "/mailgun/unsubscribe", controller: "MailgunUnsubscribeController", where: "server"});
	this.route("mailgun.drop", {path: "/mailgun/drop", controller: "MailgunDropController", where: "server"});
});
